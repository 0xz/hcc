#!/bin/bash

set -e

ROCM_PATH="/opt/rocm"
HCC_DIR="hcc-lc"


SOFTLINKS=(
  "bin" "clamp-config"
  "bin" "clang"
  "bin" "clang++"
  "bin" "extractkernel"
  "bin" "hcc"
  "bin" "hcc-config"
  "include" "amp.h"
  "include" "amp_math.h"
  "include" "amp_short_vectors.h"
  "include" "array_view"
  "include" "coordinate"
  "include" "experimental"
  "include" "grid_launch.h"
  "include" "hc.hpp"
  "include" "hc_am.hpp"
  "include" "hc_math.hpp"
  "include" "hc_printf.hpp"
  "include" "hc_short_vector.hpp"
  "include" "hsa_atomic.h"
  "include" "hsa_new.h"
  "include" "kalmar_aligned_alloc.h"
  "include" "kalmar_buffer.h"
  "include" "kalmar_cpu_launch.h"
  "include" "kalmar_defines.h"
  "include" "kalmar_exception.h"
  "include" "kalmar_index.h"
  "include" "kalmar_launch.h"
  "include" "kalmar_math.h"
  "include" "kalmar_runtime.h"
  "include" "kalmar_serialize.h"
  "include" "kalmar_short_vectors.inl"
  "include" "md5.h"
  "lib" "libhc_am.so"
  "lib" "libmcwamp.a"
  "lib" "libmcwamp_atomic.a"
  "lib" "libmcwamp_cpu.so"
  "lib" "libmcwamp_hsa.so"
)


do_softlinks() {

  mkdir -p /opt/rocm/lib
  mkdir -p /opt/rocm/bin

  ln -sf $ROCM_PATH/$HCC_DIR $ROCM_PATH/hcc

  for (( i=0; i<${#SOFTLINKS[@]}; i+=2 ))
  do
    DIR=${SOFTLINKS[i]}
    FILE=${SOFTLINKS[i+1]}
    ln -sf $ROCM_PATH/hcc/$DIR/$FILE $ROCM_PATH/$DIR
  done
}


case "$1" in
   configure)
   do_softlinks
   ;;

   abort-upgrade|abort-remove|abort-deconfigure)
      echo "$1"
    ;;

   *)
      echo "postinst called with unknown argument: $1" >&2
      exit 0
   ;;

esac

