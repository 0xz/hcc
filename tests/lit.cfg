# -*- Python -*-

# Configuration file for the 'lit' test runner.
import os
import platform

# name: The name of this test suite.
config.name = 'CPPAMP'

# testFormat: The test format to use to interpret tests.
#
# For now we require '&&' between commands, until they get globally killed and
# the test runner updated.
config.test_format = lit.formats.ShTest(execute_external = True)

# suffixes: A list of file extensions to treat as test files.
config.suffixes = ['.cpp']

# test_source_root: The root path where tests are located.
config.test_src_root = os.path.dirname(os.path.realpath(__file__))

# target_triple: Used by ShTest and TclTest formats for XFAIL checks.
config.target_triple = 'foo-bar-zen'

# test_source_root: The root path where tests are located.
config.test_source_root = os.path.dirname(__file__)


###
# Check that the site specific configuration exists.
#site_cfg = os.path.join(config.test_source_root, 'lit.site.cfg')
#if not os.path.exists(site_cfg):
#  lit.fatal('No site specific configuration available!')

# Discover the 'clang' and 'clangcc' to use.

def inferClang(PATH):
    # Determine which clang to use.
    clang = os.getenv('CLANG')

    # If the user set clang in the environment, definitely use that and don't
    # try to validate.
    if clang:
        return clang

    # Otherwise look in the path.
    clang = lit.util.which('clang', PATH)

    if not clang:
        lit.fatal("couldn't find 'clang' program, try setting "
                  "CLANG in your environment")

    return clang

config.clang = inferClang(config.llvm_tools_dir)
cppamp_options = [
  "-std=c++amp",
  "-I%s/libcxx/include" % config.project_src_dir,
  "-I%s/include" % config.project_src_dir,
]
config.clang_cc1 = config.clang + "++"
config.clang_cppamp = config.clang_cc1 + " " + " ".join(cppamp_options) + " "

if not lit.quiet:
    lit.note('using clang: %r' % config.clang)

config.substitutions.append( ('%clang_cppamp', config.clang_cppamp) )
config.substitutions.append( ('%FileCheck', os.path.join(config.llvm_tools_dir,'FileCheck') ) )


