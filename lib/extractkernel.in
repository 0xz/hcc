#!/usr/bin/perl
use strict;
use File::Copy;
use Getopt::Std;

sub usage {
  print("Usage: $0 [OPTION]... -i <input>\n");
  print("Extract the device kernels from an hcc executable.\n\n");
  print("-h          \t\t\t\tshow this help message\n");
  print("-i <input>  \t\t\t\tinput file\n");
  print("-t <target> \t\t\t\ttarget architecture (optional)\n");
  print("            \t\t\t\t AMD:AMDGPU:7:0:1 for Hawaii\n");
  print("            \t\t\t\t AMD:AMDGPU:8:0:1 for Carizzo\n");
  print("            \t\t\t\t AMD:AMDGPU:8:0:3 for Fiji / Polaris (default)\n");
  exit;
}


my %options=();
getopts('hi:t:', \%options);

if (!%options || defined $options{h}) {
  usage();
}

my $input_file;
defined $options{i} || die("input not specified");
$input_file = $options{i};
(-f $input_file) || die("can't find $input_file");

# Set default target architecture to Fiji
my $target = "AMD:AMDGPU:8:0:3";
if (defined $options{t}) {
  $target = $options{t};
}

# Convert from ISA version string to ASIC name
my $asic_target = "fiji";
if ($target eq "AMD:AMDGPU:8:0:3") { $asic_target = "fiji"; }
if ($target eq "AMD:AMDGPU:8:0:1") { $asic_target = "carrizo"; }
if ($target eq "AMD:AMDGPU:7:0:1") { $asic_target = "hawaii"; }

my $hsaco_start_tag = "_binary_kernel_hsaco_start";
my $hsaco_size_tag  = "_binary_kernel_hsaco_size";
my $hsaco_start = hex(`objdump -t $input_file | grep $hsaco_start_tag | awk '{print \$1}'`);
my $hsaco_size  = hex(`objdump -t $input_file | grep $hsaco_size_tag | awk '{print \$1}'`);

if ($hsaco_start == 0 || $hsaco_size == 0) {
  print("can't find any HSACO kernel in $input_file\n");
}
else {

  # extract HSACO file from the binary
  my $data_lma         = hex(`objdump -h $input_file | grep ".data.rel.ro" | awk '{print \$5}'`);
  my $data_file_offset = hex(`objdump -h $input_file | grep ".data.rel.ro" | awk '{print \$6}'`);
  my $hsaco_file_offset = $data_file_offset + ($hsaco_start - $data_lma);
  my $hsaco_file_name = "$input_file.hsaco";
  system("dd if=$input_file of=$hsaco_file_name skip=$hsaco_file_offset count=$hsaco_size bs=1 status=none");

  my $rocm_path = "@ROCM_ROOT@";

  # set the default to rocm path
  my $llvm_objdump = "$rocm_path/llvm/bin/llvm-objdump";

  if (defined $ENV{'HCC_HOME'}) {
    $llvm_objdump = "$ENV{'HCC_HOME'}/llvm/bin/llvm-objdump";
  }

  if (-f $llvm_objdump) {

    # use llvm-objdump to dump out GCN ISA
    system("$llvm_objdump -disassemble -mcpu=$asic_target $hsaco_file_name > $input_file.isa");
  }
  else {
    print("can't find AMDGPU disassembler\n");
  }
}
