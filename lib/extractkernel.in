#!/usr/bin/perl
use strict;
use File::Copy;
use Getopt::Std;

sub usage {
  print("Usage: $0 [OPTION]... -i <input>\n");
  print("Extract the device kernels from an hcc executable.\n\n");
  print("-h          \t\t\t\tshow this help message\n");
  print("-i <input>  \t\t\t\tinput file\n");
  print("-t <target> \t\t\t\ttarget architecture (optional)\n");
  print("            \t\t\t\t gfx700 for CI (Kaveri)\n");
  print("            \t\t\t\t gfx801 for subset of VI (Carizzo)\n");
  print("            \t\t\t\t gfx803 for subset of VI (Fiji) (default)\n");
  exit;
}


my %options=();
getopts('hi:t:', \%options);

if (!%options || defined $options{h}) {
  usage();
}

my $input_file;
defined $options{i} || die("input not specified");
$input_file = $options{i};
(-f $input_file) || die("can't find $input_file");

# Set default target architecture to Fiji
my $target = "gfx803";
if (defined $options{t}) {
  $target = $options{t};
}

my $command;

my $binary_start_tag = "_binary_kernel_brig_start";
my $binary_size_tag  = "_binary_kernel_brig_size";

$command = "objdump -t $input_file | grep $binary_start_tag | awk '{print \$1}'";
my $binary_start = hex(`$command`);
$command = "objdump -t $input_file | grep $binary_size_tag | awk '{print \$1}'";
my $binary_size  = hex(`$command`);

if ($binary_start == 0 || $binary_size == 0) {
  print("can't find any hsail kernel in $input_file\n");
}  
else {

  # extract the GPU binary file from the host binary
  my $data_lma         = hex(`objdump -h $input_file | grep ".data.rel.ro" | awk '{print \$5}'`);
  my $data_file_offset = hex(`objdump -h $input_file | grep ".data.rel.ro" | awk '{print \$6}'`);
  my $binary_file_offset = $data_file_offset + ($binary_start - $data_lma);
  my $binary_file_name = "$input_file.hsaco";
  system("dd if=$input_file of=$binary_file_name skip=$binary_file_offset count=$binary_size bs=1 status=none");

  my $rocm_path = "@ROCM_ROOT@";
  my $llvm_objdump = "$rocm_path/hcc-lc/llvm/bin/llvm-objdump";
  (-f $llvm_objdump) || die("can't find llvm-objdump to diassemble the GPU binary");

  $command = "$llvm_objdump -disassemble -mcpu=$target $binary_file_name > $input_file.$target.isa";
  system($command);
}
